class Solution {
    public int[] searchRange(int[] nums, int target) {
    int low = 0;
    int high =nums.length-1;
    int First=first(nums,target,low,high);
    int Last=last(nums,target,low,high);
    return new int[] {First,Last};
    }
    public static int last(int[] nums, int target,int low,int high){
        int result=-1;
        while(high>=low){
        int mid=low+(high-low)/2;
        if(nums[mid]==target){
           result=mid;
           low=mid+1;
        }
        else if(nums[mid]>target){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return result;
    }
    public static int first(int[] nums, int target,int low,int high){
        int result1=-1;
        while(high>=low){
        int mid=low+(high-low)/2;
        if(nums[mid]==target){
           result1=mid;
           high=mid-1;
        }
        else if(nums[mid]>target){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return result1;
    }
}
